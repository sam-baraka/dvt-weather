name: Flutter Build and Release APP

on:
  push:
    branches:
      - main
    tags:
      - '*'  # Trigger on all tags

jobs:
  build_and_release:
    name: Build, Upload, and Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.24.3

      # Step to set up Java 17
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Step to install Firebase CLI
      - name: Install Firebase CLI
        run: curl -sL https://firebase.tools | bash

      # Authenticate with Firebase using the service account key
      - name: Authenticate Firebase
        run: |
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" > $HOME/firebase-key.json
          gcloud auth activate-service-account --key-file=$HOME/firebase-key.json
          gcloud --quiet config set project YOUR_PROJECT_ID
        env:
          GCP_PROJECT: YOUR_PROJECT_ID

      # Step to generate firebase_options.dart for a specific Firebase project
      - name: Generate Firebase options
        run: flutterfire configure --project=dvt-weather-assessment

      - name: Get dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release  # Include --release for release mode

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-app
          path: build/app/outputs/apk/release/app-release.apk  # Update path if needed

      - name: Create GitHub Release (if tag)
        uses: ncipollo/release-action@v1
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')  # Only on tag push
        env:
          GITHUB_TOKEN: ${{ github.token }}  # Access token with release permissions
        with:
          tag_name: ${{ github.ref }}  # Use full ref to extract tag later
          artifacts: /tmp/app/app-release.apk  # Reference uploaded artifact
          release_name: ${{ steps.extract_tag_name.outputs.tag_name }}
          body: "Automatic release for tag ${{ steps.extract_tag_name.outputs.tag_name }}"  # Optional release description

      - name: Extract Tag Name (helper step)
        id: extract_tag_name  # Define an id for output access
        run: |
          # Regex to extract tag name from full ref (adjust if needed)
          tag_name=$(echo "${{ github.token }}" | sed 's/^refs\/tags\///')
          echo "::set-output name=tag_name::$tag_name"  # Set output variable
