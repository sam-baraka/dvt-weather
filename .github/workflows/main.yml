name: Flutter Build and Release APP

on:
  push:
    branches:
      - main
    tags:
      - '*'  # Trigger on all tags

jobs:
  build_and_release:
    name: Build, Upload, and Create Release
    runs-on: ubuntu-latest
    env:
      ANDROID_PACKAGE_NAME: com.dvt.weather  # Updated package name
      IOS_PACKAGE_NAME: com.dvt.weather
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          channel: 'stable'

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Install Firebase CLI and configure Firebase
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Setup Firebase Project
        run: |
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' > firebase-key.json
          export GOOGLE_APPLICATION_CREDENTIALS="firebase-key.json"
          # Create a minimal firebase.json
          echo '{
            "hosting": {
              "public": "public",
              "ignore": [
                "firebase.json",
                "**/.*",
                "**/node_modules/**"
              ]
            }
          }' > firebase.json
          # Initialize the project
          mkdir -p public
          firebase projects:list --token '${{ secrets.FIREBASE_TOKEN }}'
          firebase use dvt-weather-assessment --token '${{ secrets.FIREBASE_TOKEN }}'

      - name: Install FlutterFire CLI
        run: dart pub global activate flutterfire_cli

      - name: Add FlutterFire CLI to PATH
        run: echo "$HOME/.pub-cache/bin" >> $GITHUB_PATH

      - name: Generate Firebase options
        run: |
          flutterfire configure \
            --project=dvt-weather-assessment \
            --platforms=android,ios \
            --android-package-name=${{ env.ANDROID_PACKAGE_NAME }} \
            --ios-bundle-id=${{ env.ANDROID_PACKAGE_NAME }} \
            --macos-bundle-id=${{ env.ANDROID_PACKAGE_NAME }} \
            --web-app-id=${{ env.ANDROID_PACKAGE_NAME }} \
            --windows-app-id=${{ env.ANDROID_PACKAGE_NAME }} \
            --yes \
            --token '${{ secrets.FIREBASE_TOKEN }}'

      - name: Get dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-app
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: build/app/outputs/flutter-apk/app-release.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}